networks:
  dgsuc_network:


volumes:
  postgres_data:
  redis_data:
  php_sessions:
  php_cache:
  nginx_logs:
  app_logs:
  postgres_logs:
  redis_logs:
  workers_logs:

services:
  # ==========================================
  # APLICACIÃ“N PHP-FPM
  # ==========================================
  app:
    image: registry.rec.uba.ar/dgsuc/app:production
    # build options removed for Swarm mode
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL:-https://dgsuc.uba.ar}
      
      # Database
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SCHEMA=${DB_SCHEMA:-suc_app}
      
      # External Database (Mapuche via SSH Tunnel)
      - DB2_CONNECTION=pgsql
      - DB2_HOST=127.0.0.1
      - DB2_PORT=5433
      - DB2_DATABASE=${DB2_DATABASE}
      - DB2_USERNAME=${DB2_USERNAME}
      - DB2_PASSWORD=${DB2_PASSWORD}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      
      # Cache and Session
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      
      # Microsoft Azure AD
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - MICROSOFT_REDIRECT_URI=${MICROSOFT_REDIRECT_URI}
    
    volumes:
      - php_sessions:/var/www/html/storage/framework/sessions
      - php_cache:/var/www/html/storage/framework/cache
      - app_logs:/var/log/php
    
    networks:
      - dgsuc_network
    
    depends_on:
      - postgres
      - redis
    
    restart: unless-stopped
    
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    
    healthcheck:
      test: ["CMD", "php", "/var/www/html/artisan", "tinker", "--execute=echo 'OK';"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ==========================================
  # NGINX WEB SERVER
  # ==========================================
  nginx:
    image: registry.rec.uba.ar/dgsuc/nginx:latest
    # build options removed for Swarm mode
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - NGINX_HOST=${NGINX_HOST:-dgsuc.uba.ar}
    volumes:
      - ./docker/nginx/sites/default-ssl.conf:/etc/nginx/sites-enabled/default:ro
      - nginx_logs:/var/log/nginx
    networks:
      - dgsuc_network
    
    depends_on:
      - app
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # POSTGRESQL DATABASE
  # ==========================================
  postgres:
    image: postgres:17-alpine
    # container_name removed for Swarm mode
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/postgresql-prod.conf:/etc/postgresql/postgresql.conf:ro
      - ./docker/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - postgres_logs:/var/log/postgresql
    networks:
      - dgsuc_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================================
  # REDIS CACHE
  # ==========================================
  redis:
    image: redis:7-alpine
    # container_name removed for Swarm mode
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./docker/redis/redis-prod.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_logs:/var/log/redis
    networks:
      - dgsuc_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==========================================
  # QUEUE WORKERS
  # ==========================================
  workers:
    image: registry.rec.uba.ar/dgsuc/workers:latest
    # build options removed for Swarm mode
    environment:
      - APP_ENV=${APP_ENV:-production}
      - DB_HOST=postgres
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WORKER_PROCESSES=${WORKER_PROCESSES:-6}
      - WORKER_MEMORY=${WORKER_MEMORY:-4096}
      - WORKER_TIMEOUT=${WORKER_TIMEOUT:-3600}
    volumes:
      - workers_logs:/var/log/supervisor
    networks:
      - dgsuc_network
    depends_on:
      - postgres
      - redis
      - app
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"

